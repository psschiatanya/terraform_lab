# azure-pipelines.yml

trigger:
  branches:
    include:
      - main  # Adjust the branch name as per your setup

variables:
  terraformVersion: '1.0.11'  # Adjust version as needed

stages:
- stage: Terraform_Stage
  displayName: "Terraform Deployment Pipeline"
  jobs:
    - job: Terraform_Job
      displayName: "Run Terraform"
      pool:
        vmImage: 'ubuntu-latest'  # Use an image with Terraform support

      steps:
      - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
        displayName: "Install Terraform"
        inputs:
          terraformVersion: $(terraformVersion)

      - task: AzureCLI@2
        displayName: "Azure CLI Login"
        inputs:
          azureSubscription: 'azure_connection'
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            az login --service-principal -u $(AZURE_CLIENT_ID) -p $(AZURE_CLIENT_SECRET) --tenant $(AZURE_TENANT_ID)

      - script: terraform init
        displayName: "Terraform Init"
        workingDirectory: $(System.DefaultWorkingDirectory)

      - script: terraform plan -out=tfplan
        displayName: "Terraform Plan"
        workingDirectory: $(System.DefaultWorkingDirectory)

      - script: terraform apply -auto-approve tfplan
        displayName: "Terraform Apply"
        workingDirectory: $(System.DefaultWorkingDirectory)
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')  # Applies only on main branch
